name: Build APK for Android

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [34]
    steps:
      - uses: actions/checkout@v3  # Checkout repository

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools: 34.0.0
          target: 'google_apis'
          arch: 'x86_64'

      - name: Make gradlew executable
        run: chmod +x ./android/gradlew

      - name: Clean project
        run: ./gradlew clean
        working-directory: ./android

      - name: Build APK
        run: ./gradlew assembleRelease --stacktrace
        working-directory: ./android

      - name: Find APK files
        run: find . -name "*.apk" -print

      - name: List APK files
        run: ls -R android/app/build/outputs/apk/release

      - name: Create AVD
        run: |
          echo "Creating AVD..."
          echo no | ${ANDROID_HOME}/cmdline-tools/latest/bin/avdmanager create avd -n test_avd -k "system-images;android-34;google_apis;x86_64" --device "pixel"

      - name: Start Emulator
        run: |
          echo "Starting emulator..."
          ${ANDROID_HOME}/emulator/emulator -avd test_avd -no-window -no-boot-anim &
          adb wait-for-device

      - name: List ADB Devices
        run: adb devices

      - name: Wait for Emulator to Start
        run: |
          adb wait-for-device
          adb shell getprop sys.boot_completed

      - name: Check Emulator Boot Status
        run: |
          boot_status=$(adb shell getprop sys.boot_completed)
          if [ "$boot_status" -ne 1 ]; then
            echo "Emulator boot failed: $boot_status"
            exit 1
          fi

      - name: Get Emulator Logs
        run: adb logcat -d

      - name: Run Appium Tests
        run: |
          appium &
          sleep 10
          npm run test:e2e

      - name: Kill Emulator
        if: always()
        run: |
          if adb devices | grep -q emulator; then
            adb -s emulator-5554 emu kill || echo "Failed to kill emulator"
          else
            echo "Emulator is not running"
          fi

      - name: Upload APK Release
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: Apk release generated
          path: android/app/build/outputs/apk/release
