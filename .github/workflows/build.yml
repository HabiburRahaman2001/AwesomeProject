name: Build apk for android

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [34]
    steps:
      - uses: actions/checkout@v3  # Checkout repository

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'  # Use Node.js version 20.x
          cache: 'yarn'
          
      - name: Install dependencies
        run: yarn  # Install project dependencies using Yarn

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'  # Use Java 17 for Gradle builds
          cache: 'gradle'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2  # Install Android SDK
        with:
          api-level: 34
          build-tools: 34.0.0
          target: 'google_apis'
          arch: 'x86_64'

      - name: Make gradlew executable
        run: chmod +x ./android/gradlew

      - name: Clean project
        run: ./gradlew clean
        working-directory: ./android

      - name: Build APK
        run: ./gradlew assembleRelease --stacktrace
        working-directory: ./android

      - name: Find APK files
        run: find . -name "*.apk" -print

      - name: List APK files
        run: ls -R android/app/build/outputs/apk/release

      - name: Add Android SDK to PATH
        run: echo "${{ steps.setup-android.outputs.android-home }}/cmdline-tools/latest/bin" >> $GITHUB_PATH

      - name: Start Emulator
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: default
          arch: x86_64
          profile: Pixel_4  # Use Pixel 4 emulator
          emulator-options: "-no-window -no-boot-anim"
          disable-animations: true
          emulator-build: 'stable'  # Use the stable emulator build
          boot-timeout: 600  # Increase the boot timeout to 10 minutes


      - name: Wait for Emulator to Start
        run: adb wait-for-device

      - name: Check Emulator Boot Status
        run: adb shell getprop sys.boot_completed

      - name: Run Appium Tests
        run: |
          appium &
          sleep 10  # Wait for Appium to initialize
          npm run test:e2e  # Run end-to-end tests with Appium

      - name: Kill Emulator
        if: always()  # Ensure the emulator is properly killed
        run: |
          if adb devices | grep -q emulator; then
            adb -s emulator-5554 emu kill
          else
            echo "Emulator is not running"
          fi

      - name: Upload APK Release
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: Apk release generated
          path: android/app/build/outputs/apk/release
